import socket,threading,json,os
import playsound
from pynput.keyboard import Listener
if os.path.exists("pid"):os.remove("pid")
client=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
client.connect(("192.168.9.92",7777))
songs_X=os.listdir("sounds")
songs=[]
keys="abcdefghijklmnopqrstuvwxyz1234567890-"
valid_keys=[]
cache=""
pwd=""
for x in keys:
    valid_keys.append(f"'{x}'")
state="unlocked"

for x in songs_X:
    if "mp3" in x:
        songs.append(x)

def each(key):
    global cache
    if (str(key) in valid_keys) and state=="locked":
        cache+=str(key)[1:-1]
        if pwd in cache[-6:]:
            client.send(json.dumps({"type":"check","data":pwd}).encode())


def con_handler():
    global state,pwd
    while True:
        data=client.recv(1024).decode()
        data=json.loads(data)
        if data['type']=="lock":
            state="locked"
            pwd=data['pwd']
            color=data['color']
            if not os.path.exists("pid"):
                threading.Thread(target=os.system,args=(f"python3 show.py {pwd} {color[1:]}",)).start()
            playsound.playsound("sounds/"+songs[data['song']])
        if data['type']=="unlock":
            import signal
            os.kill(int(open("pid").read()), signal.SIGTERM)
            os.remove("pid")
            state="unlocked"

def sender_thread():
    while True:
        data=input(">> ")
        if data=="test":
            client.send(json.dumps({"data":"test","type":""}).encode())

threading.Thread(target=con_handler).start()
threading.Thread(target=sender_thread).start()

def x(f):pass

with Listener(
    on_press = each,
    on_release = x
) as the_listener:
    the_listener.join()
